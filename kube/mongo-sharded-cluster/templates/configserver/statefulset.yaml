apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.configServer.name }}
spec:
  serviceName: "{{ .Values.configServer.headlessServiceName }}"
  replicas: {{ .Values.replicaCount.configServers }}
  selector:
    matchLabels:
      app: {{ .Values.configServer.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.configServer.name }}
    spec:
      terminationGracePeriodSeconds: 60
      containers:
        - name: mongod-configsvr
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command:
            - "/bin/bash"
            - "-c"
            - /scripts/init-configserver.sh
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-cluster-admin-password
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-cluster-admin-password
                  key: password
          ports:
            - containerPort: {{ .Values.configServer.port }}
              name: mongo
          volumeMounts:
            - name: mongo-config-data
              mountPath: /data/db
            - name: mongo-keyfile-volume
              mountPath: /etc/mongo-secrets
              readOnly: true
            - name: scripts
              mountPath: /scripts
          resources:
{{- toYaml .Values.configServer.resources | nindent 12 }}
          startupProbe:
            exec:
              command:
                - mongosh
                - --eval
                - db.adminCommand('ping').ok === 1
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
          readinessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - db.adminCommand('ping').ok === 1
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - db.adminCommand('ping').ok === 1
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
      volumes:
        - name: mongo-keyfile-volume
          secret:
            secretName: {{ .Values.keyfile.existingSecret }}
            defaultMode: 0400
        - name: scripts
          configMap:
            name: {{ .Release.Name }}-scripts
            defaultMode: 0555
  volumeClaimTemplates:
    - metadata:
        name: mongo-config-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.configServer.storage }}
{{- if .Values.configServer.storageClassName }}
        storageClassName: "{{ .Values.configServer.storageClassName }}"
{{- end }}