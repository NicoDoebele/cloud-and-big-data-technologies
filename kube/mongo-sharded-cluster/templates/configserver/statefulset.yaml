apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.configServer.name }}
spec:
  serviceName: "{{ .Values.configServer.headlessServiceName }}"
  replicas: {{ .Values.replicaCount.configServers }}
  selector:
    matchLabels:
      app: {{ .Values.configServer.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.configServer.name }}
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongod-configsvr
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command:
            - "mongod"
            - "--configsvr"
            - "--replSet"
            - "{{ .Values.configServer.replicaSetName }}"
            - "--dbpath"
            - "/data/db"
            - "--port"
            - "{{ .Values.configServer.port }}"
            - "--bind_ip_all"
            #- "--keyFile"
            #- "/etc/mongo-secrets/mongo-keyfile"
            #- "--auth"
          #env:
          #  - name: MONGO_INITDB_ROOT_USERNAME
          #    valueFrom:
          #      secretKeyRef:
          #        name: mongo-cluster-admin-password
          #        key: username
          #  - name: MONGO_INITDB_ROOT_PASSWORD
          #    valueFrom:
          #      secretKeyRef:
          #        name: mongo-cluster-admin-password
          #        key: password
          ports:
            - containerPort: {{ .Values.configServer.port }}
              name: mongo
          volumeMounts:
            - name: mongo-config-data
              mountPath: /data/db
            - name: mongo-keyfile-volume
              mountPath: /etc/mongo-secrets
              readOnly: true
          resources:
{{- toYaml .Values.configServer.resources | nindent 12 }}
      volumes:
        - name: mongo-keyfile-volume
          secret:
            secretName: {{ .Values.keyfile.existingSecret }}
            defaultMode: 0400
  volumeClaimTemplates:
    - metadata:
        name: mongo-config-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.configServer.storage }}
{{- if .Values.configServer.storageClassName }}
        storageClassName: "{{ .Values.configServer.storageClassName }}"
{{- end }}