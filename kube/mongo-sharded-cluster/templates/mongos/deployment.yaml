apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.mongos.name }}
spec:
  replicas: {{ .Values.replicaCount.mongos }}
  selector:
    matchLabels:
      app: {{ .Values.mongos.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.mongos.name }}
    spec:
      initContainers:
        - name: wait-for-configsvr
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: MONGO_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-cluster-admin-password
                  key: username
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-cluster-admin-password
                  key: password
          command:
            - bash
            - -c
            - |
              # Wait for MongoDB config server replica set to be ready before starting mongos
              # Construct the config server hostname using Kubernetes DNS
              CONFIG_SVR_HOST="mongo-csrs-0.{{ .Values.configServer.headlessServiceName }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.configServer.port }}"

              # Retry configuration - wait up to 5 minutes (30 * 10 seconds)
              MAX_RETRIES=30
              RETRY_COUNT=0
              SUCCESS=false
              
              # Poll the config server until it's ready or max retries reached
              until [ $RETRY_COUNT -ge $MAX_RETRIES ]; do
                RETRY_COUNT=$((RETRY_COUNT+1))
                # Check if replica set is healthy by querying rs.status().ok
                # Returns 1 if healthy, anything else if not ready
                if mongosh --quiet --host "$CONFIG_SVR_HOST" --eval 'rs.status().ok' --username "$MONGO_USERNAME" --password "$MONGO_PASSWORD" --authenticationDatabase "admin" 2>/dev/null | grep -q "1"; then
                  SUCCESS=true
                  break
                fi
                # Wait 10 seconds before next retry
                sleep 10
              done

              # Exit with failure if config server never became ready
              if [ "$SUCCESS" != "true" ]; then
                exit 1
              fi
      containers:
        - name: mongos
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command:
            - "mongos"
            - "--configdb"
            - "{{ include "mongodb.configDBString" . }}"
            - "--port"
            - "{{ .Values.mongos.port }}"
            - "--bind_ip_all"
            - "--keyFile"
            - "/etc/mongo-secrets/mongo-keyfile"
            - "--logpath"
            - "/dev/stdout"
            - "--logappend"
          ports:
            - containerPort: {{ .Values.mongos.port }}
              name: mongo
          volumeMounts:
            - name: mongo-keyfile-volume
              mountPath: /etc/mongo-secrets
              readOnly: true
          resources:
{{- toYaml .Values.mongos.resources | nindent 12 }}
          startupProbe:
            exec:
              command:
                - mongosh
                - --eval
                - db.adminCommand('ping').ok === 1
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
          readinessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - db.adminCommand('ping').ok === 1
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - db.adminCommand('ping').ok === 1
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
      volumes:
        - name: mongo-keyfile-volume
          secret:
            secretName: {{ .Values.keyfile.existingSecret }}
            defaultMode: 0400
